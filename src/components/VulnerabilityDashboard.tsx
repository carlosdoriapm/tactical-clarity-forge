import { useTacticalAnalysis } from '@/hooks/useTacticalAnalysis';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { AlertTriangle, BarChart, BrainCircuit, ShieldCheck, Target, TrendingUp } from 'lucide-react';
import { Link } from 'react-router-dom';

export const VulnerabilityDashboard = () => {
  const { data: analysis, isLoading, error } = useTacticalAnalysis();

  const renderContent = () => {
    if (isLoading) {
      return (
        <div className="flex items-center space-x-2 text-warfare-gray">
          <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-warfare-accent"></div>
          <span>Analisando inteligência de combate...</span>
        </div>
      );
    }

    if (error) {
      return (
        <div className="text-warfare-red flex items-center">
          <AlertTriangle className="w-5 h-5 mr-2" />
          <p>Erro ao carregar análise: {error.message}</p>
        </div>
      );
    }
    
    if (analysis?.noProfile) {
        return (
          <div className="text-warfare-gray flex items-center">
            <AlertTriangle className="w-5 h-5 mr-2" />
            <p>Complete seu <Link to="/profile" className="text-warfare-accent underline hover:text-warfare-accent/80">perfil de combatente</Link> para receber análises.</p>
          </div>
        );
    }

    if (analysis?.insufficientData) {
      return (
        <div className="text-warfare-gray flex items-center">
          <BarChart className="w-5 h-5 mr-2" />
          <p>Dados insuficientes para análise. Registre mais <Link to="/profile" className="text-warfare-accent underline hover:text-warfare-accent/80">War Logs</Link> para obter insights detalhados.</p>
        </div>
      );
    }

    if (analysis) {
      return (
        <div className="space-y-6">
          {analysis.positivePattern && (
            <div className="flex items-start">
              <TrendingUp className="w-6 h-6 mr-4 mt-1 text-green-400 flex-shrink-0" />
              <div>
                <h3 className="font-semibold text-warfare-accent">Padrão de Sucesso Recorrente</h3>
                <p className="text-white/90">{analysis.positivePattern}</p>
              </div>
            </div>
          )}
          {analysis.recurringFailurePattern && (
            <div className="flex items-start">
              <Target className="w-6 h-6 mr-4 mt-1 text-warfare-red flex-shrink-0" />
              <div>
                <h3 className="font-semibold text-warfare-accent">Padrão de Falha Recorrente</h3>
                <p className="text-white/90">{analysis.recurringFailurePattern}</p>
              </div>
            </div>
          )}
          {analysis.coreVulnerability && (
            <div className="flex items-start">
              <AlertTriangle className="w-6 h-6 mr-4 mt-1 text-yellow-400 flex-shrink-0" />
              <div>
                <h3 className="font-semibold text-warfare-accent">Vulnerabilidade Central Exposta</h3>
                <p className="text-white/90">{analysis.coreVulnerability}</p>
              </div>
            </div>
          )}
          {analysis.strategicDirective && (
            <div className="flex items-start">
              <ShieldCheck className="w-6 h-6 mr-4 mt-1 text-warfare-blue flex-shrink-0" />
              <div>
                <h3 className="font-semibold text-warfare-accent">Diretiva Estratégica Imediata</h3>
                <p className="text-white/90">{analysis.strategicDirective}</p>
              </div>
            </div>
          )}
        </div>
      );
    }
    
    return <p className="text-warfare-gray">Nenhuma análise tática disponível no momento.</p>;
  };

  return (
    <Card className="bg-warfare-card border-warfare-gray/20 text-white">
      <CardHeader>
        <CardTitle className="flex items-center text-xl">
          <BrainCircuit className="w-6 h-6 mr-3 text-warfare-blue" />
          Relatório de Inteligência Tática
        </CardTitle>
        <CardDescription>Análise de IA sobre seus padrões de combate baseada nos seus War Logs.</CardDescription>
      </CardHeader>
      <CardContent>
        {renderContent()}
      </CardContent>
    </Card>
  );
};
